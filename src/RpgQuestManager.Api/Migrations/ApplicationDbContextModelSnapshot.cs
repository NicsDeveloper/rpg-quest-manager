// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RpgQuestManager.Api.Data;

#nullable disable

namespace RpgQuestManager.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RpgQuestManager.Api.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Attack")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Defense")
                        .HasColumnType("integer");

                    b.Property<int>("Experience")
                        .HasColumnType("integer");

                    b.Property<int>("Gold")
                        .HasColumnType("integer");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastPlayedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("MaxHealth")
                        .HasColumnType("integer");

                    b.Property<int>("Morale")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NextLevelExperience")
                        .HasColumnType("integer");

                    b.Property<int[]>("StatusEffects")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("RpgQuestManager.Api.Models.CharacterEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AmuletId")
                        .HasColumnType("integer");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("integer");

                    b.Property<int?>("BootsId")
                        .HasColumnType("integer");

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int?>("GlovesId")
                        .HasColumnType("integer");

                    b.Property<int?>("HelmetId")
                        .HasColumnType("integer");

                    b.Property<int?>("RingId")
                        .HasColumnType("integer");

                    b.Property<int?>("ShieldId")
                        .HasColumnType("integer");

                    b.Property<int?>("WeaponId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AmuletId");

                    b.HasIndex("ArmorId");

                    b.HasIndex("BootsId");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.HasIndex("GlovesId");

                    b.HasIndex("HelmetId");

                    b.HasIndex("RingId");

                    b.HasIndex("ShieldId");

                    b.HasIndex("WeaponId");

                    b.ToTable("CharacterEquipment");
                });

            modelBuilder.Entity("RpgQuestManager.Api.Models.InventoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AcquiredAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int?>("EquippedSlot")
                        .HasColumnType("integer");

                    b.Property<bool>("IsEquipped")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("CharacterId", "ItemId")
                        .IsUnique();

                    b.ToTable("InventoryItems");
                });

            modelBuilder.Entity("RpgQuestManager.Api.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AttackBonus")
                        .HasColumnType("integer");

                    b.Property<bool>("AvailableInShop")
                        .HasColumnType("boolean");

                    b.Property<int?>("DefenseBonus")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DropChance")
                        .HasColumnType("integer");

                    b.Property<int[]>("DroppedBy")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int?>("EquipmentSlot")
                        .HasColumnType("integer");

                    b.Property<int[]>("FoundIn")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int?>("HealthBonus")
                        .HasColumnType("integer");

                    b.Property<bool>("IsConsumable")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSellable")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTradeable")
                        .HasColumnType("boolean");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int?>("MoraleBonus")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rarity")
                        .HasColumnType("integer");

                    b.Property<List<string>>("RequiredClasses")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int?>("RequiredLevel")
                        .HasColumnType("integer");

                    b.Property<int>("ShopPrice")
                        .HasColumnType("integer");

                    b.Property<List<string>>("ShopTypes")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("StackSize")
                        .HasColumnType("integer");

                    b.Property<int?>("StatusEffectChance")
                        .HasColumnType("integer");

                    b.Property<int?>("StatusEffectDuration")
                        .HasColumnType("integer");

                    b.Property<int[]>("StatusEffects")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("RpgQuestManager.Api.Models.Monster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Attack")
                        .HasColumnType("integer");

                    b.Property<string>("DefeatMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Defense")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ExperienceReward")
                        .HasColumnType("integer");

                    b.Property<int>("Habitat")
                        .HasColumnType("integer");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("MaxHealth")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rank")
                        .HasColumnType("integer");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.Property<int[]>("SpecialAbilities")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int>("SpecialAbilityChance")
                        .HasColumnType("integer");

                    b.Property<int[]>("StatusEffects")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("TauntMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("VictoryMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("RpgQuestManager.Api.Models.Quest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<string>("CompletionText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Difficulty")
                        .HasColumnType("integer");

                    b.Property<int>("Environment")
                        .HasColumnType("integer");

                    b.Property<int>("EstimatedDuration")
                        .HasColumnType("integer");

                    b.Property<int>("ExperienceReward")
                        .HasColumnType("integer");

                    b.Property<int>("GoldReward")
                        .HasColumnType("integer");

                    b.Property<string>("IntroductionText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsRepeatable")
                        .HasColumnType("boolean");

                    b.Property<List<string>>("Prerequisites")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int?>("RequiredLevel")
                        .HasColumnType("integer");

                    b.Property<List<string>>("Rewards")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("TargetMonsterName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TargetMonsterType")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Quests");
                });

            modelBuilder.Entity("RpgQuestManager.Api.Models.StatusEffectState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("TargetId")
                        .HasColumnType("integer");

                    b.Property<int>("TargetKind")
                        .HasColumnType("integer");

                    b.Property<int>("TurnsRemaining")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("StatusEffects");
                });

            modelBuilder.Entity("RpgQuestManager.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastLoginAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RpgQuestManager.Api.Models.UserSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("RpgQuestManager.Api.Models.Character", b =>
                {
                    b.HasOne("RpgQuestManager.Api.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RpgQuestManager.Api.Models.CharacterEquipment", b =>
                {
                    b.HasOne("RpgQuestManager.Api.Models.InventoryItem", "Amulet")
                        .WithMany()
                        .HasForeignKey("AmuletId");

                    b.HasOne("RpgQuestManager.Api.Models.InventoryItem", "Armor")
                        .WithMany()
                        .HasForeignKey("ArmorId");

                    b.HasOne("RpgQuestManager.Api.Models.InventoryItem", "Boots")
                        .WithMany()
                        .HasForeignKey("BootsId");

                    b.HasOne("RpgQuestManager.Api.Models.Character", "Character")
                        .WithOne("Equipment")
                        .HasForeignKey("RpgQuestManager.Api.Models.CharacterEquipment", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RpgQuestManager.Api.Models.InventoryItem", "Gloves")
                        .WithMany()
                        .HasForeignKey("GlovesId");

                    b.HasOne("RpgQuestManager.Api.Models.InventoryItem", "Helmet")
                        .WithMany()
                        .HasForeignKey("HelmetId");

                    b.HasOne("RpgQuestManager.Api.Models.InventoryItem", "Ring")
                        .WithMany()
                        .HasForeignKey("RingId");

                    b.HasOne("RpgQuestManager.Api.Models.InventoryItem", "Shield")
                        .WithMany()
                        .HasForeignKey("ShieldId");

                    b.HasOne("RpgQuestManager.Api.Models.InventoryItem", "Weapon")
                        .WithMany()
                        .HasForeignKey("WeaponId");

                    b.Navigation("Amulet");

                    b.Navigation("Armor");

                    b.Navigation("Boots");

                    b.Navigation("Character");

                    b.Navigation("Gloves");

                    b.Navigation("Helmet");

                    b.Navigation("Ring");

                    b.Navigation("Shield");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("RpgQuestManager.Api.Models.InventoryItem", b =>
                {
                    b.HasOne("RpgQuestManager.Api.Models.Character", "Character")
                        .WithMany("Inventory")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RpgQuestManager.Api.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("RpgQuestManager.Api.Models.UserSession", b =>
                {
                    b.HasOne("RpgQuestManager.Api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RpgQuestManager.Api.Models.Character", b =>
                {
                    b.Navigation("Equipment");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("RpgQuestManager.Api.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
