using Microsoft.EntityFrameworkCore;
using RpgQuestManager.Api.Models;
using System.Security.Cryptography;
using System.Text;

namespace RpgQuestManager.Api.Data;

public class DatabaseSeeder
{
    private readonly ApplicationDbContext _context;
    private readonly ILogger<DatabaseSeeder> _logger;

    public DatabaseSeeder(ApplicationDbContext context, ILogger<DatabaseSeeder> logger)
    {
        _context = context;
        _logger = logger;
    }

    public async Task SeedAsync()
    {
        // Verificar se j√° tem dados
        if (await _context.Heroes.AnyAsync())
        {
            _logger.LogInformation("Banco de dados j√° cont√©m dados. Seed ignorado.");
            return;
        }

        _logger.LogInformation("üå± Iniciando seed do banco de dados...");

        await SeedUsersAsync();
        await SeedHeroesAsync();
        await SeedEnemiesAsync();
        await SeedItemsAsync();
        await SeedQuestsAsync();
        await SeedRewardsAsync();
        await SeedQuestEnemiesAsync();
        await SeedHeroItemsAsync();
        await SeedHeroQuestsAsync();
        await SeedBossDropTableAsync(); // Novo
        await SeedDiceInventoriesAsync(); // Novo

        _logger.LogInformation("‚úÖ Seed do banco de dados conclu√≠do com sucesso!");
    }

    private async Task SeedUsersAsync()
    {
        var users = new List<User>
        {
            new User
            {
                Username = "admin",
                Email = "admin@eldoria.com",
                PasswordHash = HashPassword("admin123"),
                Role = "Admin",
                CreatedAt = DateTime.UtcNow.AddDays(-30)
            },
            new User
            {
                Username = "player1",
                Email = "player1@eldoria.com",
                PasswordHash = HashPassword("senha123"),
                Role = "Player",
                CreatedAt = DateTime.UtcNow.AddDays(-20)
            },
            new User
            {
                Username = "gamer",
                Email = "gamer@eldoria.com",
                PasswordHash = HashPassword("senha123"),
                Role = "Player",
                CreatedAt = DateTime.UtcNow.AddDays(-15)
            }
        };

        _context.Users.AddRange(users);
        await _context.SaveChangesAsync();
        _logger.LogInformation("üë§ {Count} usu√°rios criados", users.Count);
    }

    private async Task SeedHeroesAsync()
    {
        var users = await _context.Users.ToListAsync();
        var player1 = users.FirstOrDefault(u => u.Username == "player1");
        var gamer = users.FirstOrDefault(u => u.Username == "gamer");

        var heroes = new List<Hero>
        {
            // Her√≥i do player1
            new Hero
            {
                Name = "Aragorn",
                Class = "Guerreiro",
                Level = 15,
                Experience = 450,
                Strength = 40,
                Intelligence = 22,
                Dexterity = 28,
                Gold = 5000,
                UserId = player1?.Id,
                CreatedAt = DateTime.UtcNow.AddDays(-25)
            },
            // Her√≥i do gamer
            new Hero
            {
                Name = "Gandalf",
                Class = "Mago",
                Level = 20,
                Experience = 800,
                Strength = 18,
                Intelligence = 50,
                Dexterity = 24,
                Gold = 8000,
                UserId = gamer?.Id,
                CreatedAt = DateTime.UtcNow.AddDays(-28)
            },
            new Hero
            {
                Name = "Legolas",
                Class = "Arqueiro",
                Level = 18,
                Experience = 650,
                Strength = 26,
                Intelligence = 28,
                Dexterity = 48,
                Gold = 6500,
                CreatedAt = DateTime.UtcNow.AddDays(-22)
            },
            
            // Her√≥is Experientes (N√≠vel M√©dio)
            new Hero
            {
                Name = "Gimli",
                Class = "Guerreiro",
                Level = 12,
                Experience = 300,
                Strength = 36,
                Intelligence = 18,
                Dexterity = 20,
                Gold = 3500,
                CreatedAt = DateTime.UtcNow.AddDays(-18)
            },
            new Hero
            {
                Name = "Merlin",
                Class = "Mago",
                Level = 14,
                Experience = 200,
                Strength = 16,
                Intelligence = 42,
                Dexterity = 22,
                Gold = 4200,
                CreatedAt = DateTime.UtcNow.AddDays(-20)
            },
            new Hero
            {
                Name = "Robin Hood",
                Class = "Arqueiro",
                Level = 10,
                Experience = 500,
                Strength = 22,
                Intelligence = 20,
                Dexterity = 38,
                Gold = 2800,
                CreatedAt = DateTime.UtcNow.AddDays(-15)
            },
            new Hero
            {
                Name = "Arthas",
                Class = "Paladino",
                Level = 13,
                Experience = 450,
                Strength = 32,
                Intelligence = 30,
                Dexterity = 26,
                Gold = 4000,
                CreatedAt = DateTime.UtcNow.AddDays(-17)
            },
            
            // Her√≥is Iniciantes (Baixo N√≠vel)
            new Hero
            {
                Name = "Frodo",
                Class = "Ladino",
                Level = 5,
                Experience = 80,
                Strength = 18,
                Intelligence = 20,
                Dexterity = 28,
                Gold = 800,
                CreatedAt = DateTime.UtcNow.AddDays(-10)
            },
            new Hero
            {
                Name = "Boromir",
                Class = "Guerreiro",
                Level = 8,
                Experience = 150,
                Strength = 28,
                Intelligence = 16,
                Dexterity = 18,
                Gold = 1500,
                CreatedAt = DateTime.UtcNow.AddDays(-12)
            },
            new Hero
            {
                Name = "Galadriel",
                Class = "Mago",
                Level = 7,
                Experience = 200,
                Strength = 14,
                Intelligence = 32,
                Dexterity = 20,
                Gold = 1200,
                CreatedAt = DateTime.UtcNow.AddDays(-8)
            },
            new Hero
            {
                Name = "Elrond",
                Class = "Paladino",
                Level = 11,
                Experience = 350,
                Strength = 26,
                Intelligence = 34,
                Dexterity = 24,
                Gold = 3000,
                CreatedAt = DateTime.UtcNow.AddDays(-16)
            },
            new Hero
            {
                Name = "Arwen",
                Class = "Arqueiro",
                Level = 9,
                Experience = 250,
                Strength = 20,
                Intelligence = 26,
                Dexterity = 36,
                Gold = 2000,
                CreatedAt = DateTime.UtcNow.AddDays(-11)
            }
        };

        _context.Heroes.AddRange(heroes);
        await _context.SaveChangesAsync();
        _logger.LogInformation("‚öîÔ∏è {Count} her√≥is criados", heroes.Count);
    }

    private async Task SeedEnemiesAsync()
    {
        var enemies = new List<Enemy>
        {
            // Inimigos Fracos (D6 - f√°cil)
            new Enemy { Name = "Goblin Raider", Type = "Goblin", Power = 15, Health = 50, RequiredDiceType = DiceType.D6, MinimumRoll = 3, IsBoss = false, CreatedAt = DateTime.UtcNow.AddDays(-20) },
            new Enemy { Name = "Orc Scout", Type = "Orc", Power = 25, Health = 80, RequiredDiceType = DiceType.D6, MinimumRoll = 4, IsBoss = false, CreatedAt = DateTime.UtcNow.AddDays(-20) },
            new Enemy { Name = "Skeleton Warrior", Type = "Morto-Vivo", Power = 20, Health = 60, RequiredDiceType = DiceType.D6, MinimumRoll = 3, IsBoss = false, CreatedAt = DateTime.UtcNow.AddDays(-20) },
            new Enemy { Name = "Wolf", Type = "Besta", Power = 18, Health = 55, RequiredDiceType = DiceType.D6, MinimumRoll = 3, IsBoss = false, CreatedAt = DateTime.UtcNow.AddDays(-20) },
            new Enemy { Name = "Giant Spider", Type = "Aranha", Power = 22, Health = 70, RequiredDiceType = DiceType.D6, MinimumRoll = 4, IsBoss = false, CreatedAt = DateTime.UtcNow.AddDays(-20) },
            
            // Inimigos M√©dios (D8 - m√©dio)
            new Enemy { Name = "Orc Warlord", Type = "Orc", Power = 45, Health = 150, RequiredDiceType = DiceType.D8, MinimumRoll = 5, IsBoss = false, CreatedAt = DateTime.UtcNow.AddDays(-18) },
            new Enemy { Name = "Dark Wizard", Type = "Humano", Power = 50, Health = 120, RequiredDiceType = DiceType.D8, MinimumRoll = 6, IsBoss = false, CreatedAt = DateTime.UtcNow.AddDays(-18) },
            new Enemy { Name = "Troll", Type = "Troll", Power = 55, Health = 200, RequiredDiceType = DiceType.D8, MinimumRoll = 5, IsBoss = false, CreatedAt = DateTime.UtcNow.AddDays(-18) },
            new Enemy { Name = "Vampire", Type = "Morto-Vivo", Power = 48, Health = 140, RequiredDiceType = DiceType.D8, MinimumRoll = 6, IsBoss = false, CreatedAt = DateTime.UtcNow.AddDays(-18) },
            new Enemy { Name = "Werewolf", Type = "Besta", Power = 52, Health = 160, RequiredDiceType = DiceType.D8, MinimumRoll = 5, IsBoss = false, CreatedAt = DateTime.UtcNow.AddDays(-18) },
            
            // BOSSES (D12 e D20 - muito dif√≠cil, com drops especiais)
            new Enemy { Name = "Demon Lord", Type = "Dem√¥nio", Power = 75, Health = 300, RequiredDiceType = DiceType.D12, MinimumRoll = 8, IsBoss = true, CreatedAt = DateTime.UtcNow.AddDays(-15) },
            new Enemy { Name = "Elder Dragon", Type = "Drag√£o", Power = 90, Health = 500, RequiredDiceType = DiceType.D20, MinimumRoll = 15, IsBoss = true, CreatedAt = DateTime.UtcNow.AddDays(-15) },
            new Enemy { Name = "Lich King", Type = "Morto-Vivo", Power = 80, Health = 350, RequiredDiceType = DiceType.D12, MinimumRoll = 9, IsBoss = true, CreatedAt = DateTime.UtcNow.AddDays(-15) },
            new Enemy { Name = "Balrog", Type = "Dem√¥nio", Power = 95, Health = 450, RequiredDiceType = DiceType.D20, MinimumRoll = 16, IsBoss = true, CreatedAt = DateTime.UtcNow.AddDays(-15) },
            new Enemy { Name = "Kraken", Type = "Besta", Power = 85, Health = 400, RequiredDiceType = DiceType.D12, MinimumRoll = 10, IsBoss = true, CreatedAt = DateTime.UtcNow.AddDays(-15) }
        };

        _context.Enemies.AddRange(enemies);
        await _context.SaveChangesAsync();
        _logger.LogInformation("üëπ {Count} inimigos criados ({BossCount} bosses com drops especiais)", 
            enemies.Count, enemies.Count(e => e.IsBoss));
    }

    private async Task SeedItemsAsync()
    {
        var items = new List<Item>
        {
            // COMUM - Itens compartilhados (podem dropar de qualquer boss)
            new Item { Name = "Po√ß√£o de Cura Menor", Description = "Restaura um pouco de vida", Type = "Po√ß√£o", Rarity = ItemRarity.Common, Value = 50 },
            new Item { Name = "Po√ß√£o de Mana", Description = "Restaura energia m√°gica", Type = "Po√ß√£o", Rarity = ItemRarity.Common, BonusIntelligence = 3, Value = 50 },
            new Item { Name = "Espada de Ferro", Description = "Uma espada simples mas eficaz", Type = "Espada", Rarity = ItemRarity.Common, BonusStrength = 5, Value = 100 },
            new Item { Name = "Armadura de Couro", Description = "Prote√ß√£o leve para iniciantes", Type = "Armadura", Rarity = ItemRarity.Common, BonusStrength = 3, BonusDexterity = 2, Value = 150 },
            
            // RARO - Itens menos comuns
            new Item { Name = "Espada √âlfica", Description = "Forjada pelos elfos de Rivendell", Type = "Espada", Rarity = ItemRarity.Rare, BonusStrength = 12, BonusDexterity = 5, Value = 500 },
            new Item { Name = "Cota de Malha", Description = "Armadura resistente de an√©is de metal", Type = "Armadura", Rarity = ItemRarity.Rare, BonusStrength = 8, Value = 400 },
            new Item { Name = "Arco Longo √âlfico", Description = "Arco de madeira √©lfica com precis√£o perfeita", Type = "Arco", Rarity = ItemRarity.Rare, BonusDexterity = 15, BonusStrength = 5, Value = 800 },
            
            // √âPICO I-III - Itens muito raros (Boss Drops)
            new Item { Name = "Espada Flamejante", Description = "Uma l√¢mina envolta em chamas eternas do Demon Lord", Type = "Espada", Rarity = ItemRarity.Epic, RarityTier = 1, BonusStrength = 20, BonusIntelligence = 8, Value = 1500, IsExclusiveDrop = true },
            new Item { Name = "Escama do Drag√£o Anci√£o", Description = "Escama impenetr√°vel do Elder Dragon", Type = "Armadura", Rarity = ItemRarity.Epic, RarityTier = 2, BonusStrength = 18, BonusDexterity = 12, Value = 2000, IsExclusiveDrop = true },
            new Item { Name = "Cajado do Lich", Description = "Cajado necrom√¢ntico do Lich King", Type = "Cajado", Rarity = ItemRarity.Epic, RarityTier = 2, BonusIntelligence = 25, Value = 1800, IsExclusiveDrop = true },
            new Item { Name = "Chicote Flamejante", Description = "Arma do pr√≥prio Balrog", Type = "Chicote", Rarity = ItemRarity.Epic, RarityTier = 3, BonusStrength = 22, BonusIntelligence = 15, Value = 2200, IsExclusiveDrop = true },
            
            // LEND√ÅRIO I-III - Itens extremamente raros (Boss Drops Exclusivos)
            new Item { Name = "L√¢mina Demon√≠aca: Corruptor", Description = "Espada lend√°ria do Demon Lord. Quem a empunha sente o poder das trevas", Type = "Espada", Rarity = ItemRarity.Legendary, RarityTier = 1, BonusStrength = 30, BonusIntelligence = 20, Value = 5000, IsExclusiveDrop = true },
            new Item { Name = "Cora√ß√£o do Drag√£o", Description = "O cora√ß√£o ainda pulsante do Elder Dragon, concede poder supremo", Type = "Amuleto", Rarity = ItemRarity.Legendary, RarityTier = 3, BonusStrength = 25, BonusIntelligence = 25, BonusDexterity = 25, Value = 10000, IsExclusiveDrop = true },
            new Item { Name = "Coroa do Lich King", Description = "Coroa amaldi√ßoada que controla os mortos-vivos", Type = "Capacete", Rarity = ItemRarity.Legendary, RarityTier = 2, BonusIntelligence = 35, Value = 7000, IsExclusiveDrop = true },
            new Item { Name = "Foice do Balrog", Description = "Arma ancestral forjada no cora√ß√£o da montanha", Type = "Foice", Rarity = ItemRarity.Legendary, RarityTier = 3, BonusStrength = 40, BonusDexterity = 15, Value = 8000, IsExclusiveDrop = true },
            new Item { Name = "Tent√°culo do Kraken", Description = "Tent√°culo arrancado do pr√≥prio Kraken, ainda se move!", Type = "A√ßoite", Rarity = ItemRarity.Legendary, RarityTier = 2, BonusStrength = 28, BonusDexterity = 22, Value = 6500, IsExclusiveDrop = true },
            
            // Itens gerais adicionais
            new Item { Name = "Escudo de Madeira", Description = "Escudo b√°sico de prote√ß√£o", Type = "Escudo", Rarity = ItemRarity.Common, BonusStrength = 4, Value = 80 },
            new Item { Name = "Manto M√°gico", Description = "Manto que amplifica poderes m√°gicos", Type = "Armadura", Rarity = ItemRarity.Rare, BonusIntelligence = 12, Value = 900 }
        };

        _context.Items.AddRange(items);
        await _context.SaveChangesAsync();
        _logger.LogInformation("üó°Ô∏è {Count} itens criados ({Epic} √©picos, {Legendary} lend√°rios)", 
            items.Count, 
            items.Count(i => i.Rarity == ItemRarity.Epic),
            items.Count(i => i.Rarity == ItemRarity.Legendary));
    }

    private async Task SeedQuestsAsync()
    {
        var quests = new List<Quest>
        {
            // ===== QUEST TUTORIAL (N√≠vel 1 - SEMPRE DISPON√çVEL) =====
            new Quest
            {
                Name = "Os Primeiros Passos: Bem-vindo √† Guilda",
                Description = @"üé≠ **Bem-vindo √† Guilda dos Her√≥is!**

O Mestre da Guilda, **Eldrin Cora√ß√£o-de-Pedra**, um veterano de mil batalhas, te recebe com um sorriso caloroso mas marcas de preocupa√ß√£o em seu rosto enrugado.

'Aventureiro! Finalmente chegou. Nosso reino, **Valestra**, est√° em tempos sombrios. Criaturas das trevas emergem das Terras Desoladas, e precisamos de cada bra√ßo forte, cada mente brilhante, cada arco certeiro que pudermos reunir.'

Ele aponta para um mapa na parede, mostrando a **Vila de Thornwood**, rodeada por pequenos s√≠mbolos vermelhos.

'Goblins. Criaturas covardes, mas perigosas em n√∫meros. Eles atacaram fazendas pr√≥ximas e roubaram suprimentos. Sua primeira miss√£o: v√° at√© a **Floresta de Thornwood** e elimine pelo menos 5 goblins. Isso mostrar√° que voc√™ tem o que √© preciso para ser um verdadeiro her√≥i.'

**Objetivos:**
‚Ä¢ Derrote 5 Goblin Raiders na Floresta de Thornwood
‚Ä¢ Retorne √† Guilda com prova de sua vit√≥ria
‚Ä¢ Aprenda as bases do combate e progress√£o

'Ah, e jovem her√≥i... lembre-se: mesmo os maiores guerreiros come√ßaram enfrentando goblins. Boa sorte!'",
                Difficulty = "Tutorial",
                RequiredLevel = 1,
                RequiredClass = "Any",
                Type = "Main",
                ExperienceReward = 100,
                GoldReward = 50,
                CreatedAt = DateTime.UtcNow.AddDays(-30)
            },
            
            // ===== QUESTS INICIANTES (N√≠vel 1-3) =====
            new Quest
            {
                Name = "A Infesta√ß√£o do Cemit√©rio",
                Description = @"‚ö∞Ô∏è **O Descanso Perturbado**

O **Padre Marcus**, guardi√£o do antigo cemit√©rio de Thornwood, te procura desesperado. Suas m√£os tremem enquanto segura um crucifixo de prata.

'Her√≥i, algo terr√≠vel aconteceu! Na √∫ltima lua nova, os mortos come√ßaram a emergir de suas tumbas. Esqueletos guerreiros vagam entre as l√°pides, atacando qualquer um que se aproxime!'

Ele aponta para marcas de garras na porta da capela.

'Minha congrega√ß√£o n√£o pode mais visitar seus entes queridos. As fam√≠lias choram em desespero. **10 esqueletos** atormentam o cemit√©rio. Por favor, devolva-os ao descanso eterno!'

**Local:** Cemit√©rio Antigo de Thornwood
**Inimigos:** Skeleton Warriors (Mortos-vivos amaldi√ßoados)
**Recompensa especial:** B√™n√ß√£o do Padre Marcus (+10% XP por 1 hora)

'Que a luz te guie nas trevas, bravo guerreiro.'",
                Difficulty = "F√°cil",
                RequiredLevel = 2,
                RequiredClass = "Any",
                Type = "Side",
                ExperienceReward = 150,
                GoldReward = 120,
                CreatedAt = DateTime.UtcNow.AddDays(-28)
            },
            
            new Quest
            {
                Name = "Os Lobos Famintos da Estrada",
                Description = @"üê∫ **Perigo nas Rotas Comerciais**

**Greta**, a mercadora viajante, est√° presa na taverna h√° tr√™s dias. Ela mostra marcas de mordidas em seu bra√ßo enfaixado.

'Nunca vi nada assim em 20 anos de estrada! Uma matilha de lobos, grandes como p√¥neis, est√° bloqueando a **Estrada do Leste**. Eles atacaram minha caravana, mataram meus guardas e quase me levaram!'

Ela deixa cair uma bolsa de moedas na mesa.

'Preciso chegar a **Porto √Çncora** em dois dias, ou perderei o contrato da vida. Mate pelo menos **8 lobos** e limpe a estrada. Pagarei bem - e voc√™ ter√° minha gratid√£o eterna.'

**Local:** Estrada do Leste, pr√≥ximo ao Rio Cristalino
**Inimigos:** Lobos Selvagens (Matilha faminta e agressiva)
**Tempo:** Urgente - Greta precisa partir em breve

'Por favor, n√£o me decepcione. Meu futuro depende disso.'",
                Difficulty = "F√°cil",
                RequiredLevel = 3,
                RequiredClass = "Any",
                Type = "Side",
                ExperienceReward = 180,
                GoldReward = 150,
                CreatedAt = DateTime.UtcNow.AddDays(-27)
            },

            // ===== QUESTS M√âDIAS (N√≠vel 5-8) =====
            new Quest
            {
                Name = "A Invas√£o Orc: Defesa de Thornwood",
                Description = @"‚öîÔ∏è **A HORDA SE APROXIMA**

**Capit√£o Roderick**, comandante da guarda de Thornwood, bate seu punho na mesa do quartel-general. Mapas de batalha est√£o espalhados, marcados com s√≠mbolos vermelhos de inimigos.

'ESCUTE BEM, HER√ìI! Espi√µes reportam que uma horda orc, liderada pelo brutal **Warlord Grak'thor**, marcha em dire√ß√£o √† vila. **TREZENTOS ORCS**. Queimando tudo em seu caminho!'

Ele aponta para o mapa, mostrando a rota dos orcs.

'N√£o temos tropas suficientes. Preciso que voc√™ e outros her√≥is fa√ßam uma **MISS√ÉO SUICIDA**: infiltrar-se no acampamento orc a leste e **MATAR O WARLORD**. Sem l√≠der, a horda se dispersar√°.'

Sua express√£o se suaviza por um momento.

'Sei que pe√ßo muito. Mas se Thornwood cair, **milhares morrer√£o**. Voc√™ √© nossa √∫nica esperan√ßa.'

**Local:** Acampamento Orc, Plan√≠cies de Cinzas
**Inimigo:** Orc Warlord Grak'thor (L√≠der brutal e estrategista)
**Risco:** MUITO ALTO - Infiltra√ß√£o em territ√≥rio inimigo
**Impacto:** SALVA THORNWOOD DE DESTRUI√á√ÉO

'Volte vivo, her√≥i. Valestra precisa de voc√™.'",
                Difficulty = "M√©dio",
                RequiredLevel = 5,
                RequiredClass = "Any",
                Type = "Main",
                ExperienceReward = 400,
                GoldReward = 500,
                CreatedAt = DateTime.UtcNow.AddDays(-25)
            },

            new Quest
            {
                Name = "O Feiticeiro Negro de Ravenmoor",
                Description = @"üåë **MAGIA NEGRA E MALDI√á√ïES**

A **Arquimaga Lyria**, da Academia Arcana, te convoca urgentemente. C√≠rculos m√°gicos brilham no ch√£o de sua torre enquanto ela estuda pergaminhos antigos.

'Detectei uma presen√ßa sombria no p√¢ntano de Ravenmoor. Um feiticeiro negro, **Malachar, o Corrompido**, est√° realizando rituais proibidos!'

Ela aponta para uma bola de cristal mostrando vis√µes de alde√µes transformados em criaturas.

'Ele est√° transmutando alde√µes em abomina√ß√µes! J√° perdemos **20 pessoas**. Se n√£o pararmos, ele ter√° poder suficiente para convocar algo... pior.'

Sua voz se torna grave.

'Malachar foi meu aluno, h√° anos. Eu o expulsei por praticar necromancia. Agora voltou para se vingar. Voc√™ deve confront√°-lo em sua **Torre das Sombras**.'

**Local:** Torre das Sombras, P√¢ntano de Ravenmoor
**Inimigo:** Dark Wizard Malachar (Ex-membro da Academia, extremamente perigoso)
**Habilidades inimigas:** Magia negra, invoca√ß√µes demon√≠acas, maldi√ß√µes
**Recompensa especial:** Tomo de Magia Antiga

'Tenha cuidado, her√≥i. Ele conhece todos os truques que eu ensino...'",
                Difficulty = "M√©dio",
                RequiredLevel = 6,
                RequiredClass = "Any",
                Type = "Main",
                ExperienceReward = 450,
                GoldReward = 600,
                CreatedAt = DateTime.UtcNow.AddDays(-23)
            },

            new Quest
            {
                Name = "A Maldi√ß√£o do Lobisomem",
                Description = @"üåï **HORROR NAS NOITES DE LUA CHEIA**

O **Lorde Edmund**, governante de Silverwood, te recebe em seu solar. Ele parece ter envelhecido 20 anos. Suas m√£os tremem ao te oferecer vinho.

'A cada lua cheia, a mesma hist√≥ria. Corpos dilacerados. Fam√≠lias destro√ßadas. Um **LOBISOMEM** assombra meus dom√≠nios h√° tr√™s meses.'

Ele mostra retratos de fam√≠lia na parede - metade cobertos por pano negro.

'Perdi meu filho primog√™nito na primeira noite. Minha filha na segunda. Agora minha esposa est√° trancada na torre, rezando. Os alde√µes falam em abandonar Silverwood.'

Sua voz se quebra.

'O mestre de ca√ßa identificou a toca da criatura: as **Cavernas de Prata** ao norte. Mate-o. Por favor. Antes da pr√≥xima lua cheia - em **3 dias**.'

**Local:** Cavernas de Prata, Montanhas do Norte
**Inimigo:** Werewolf (Amaldi√ßoado, for√ßa sobre-humana, regenera√ß√£o)
**Prazo:** 3 dias at√© pr√≥xima lua cheia
**Equipamento recomendado:** Armas de prata (fornecidas pelo Lorde)

'Salve minha fam√≠lia. Salve Silverwood.'",
                Difficulty = "M√©dio",
                RequiredLevel = 7,
                RequiredClass = "Any",
                Type = "Side",
                ExperienceReward = 500,
                GoldReward = 700,
                CreatedAt = DateTime.UtcNow.AddDays(-21)
            },

            // ===== QUESTS DIF√çCEIS (N√≠vel 10-15) =====
            new Quest
            {
                Name = "O Vampiro Ancestral de Crimson Vale",
                Description = @"ü¶á **TERROR IMORTAL**

A **Inquisidora Celeste**, ca√ßadora de vampiros h√° 30 anos, te mostra um medalh√£o ensanguentado. Seu rosto cicatrizado conta hist√≥rias de batalhas perdidas.

'Este medalh√£o pertencia ao meu mentor. Encontrei-o drenado de sangue em **Crimson Vale**. O trabalho de **Lord Vladimor**, um vampiro de 500 anos.'

Ela abre um tomo antigo, mostrando ilustra√ß√µes de horrores noturnos.

'Vladimor n√£o √© um vampiro comum. √â um **ANCI√ÉO**. Comandou ex√©rcitos de mortos-vivos nas Guerras Sangrentas. Foi selado por meu bisav√¥, mas o selo se quebrou.'

Seus olhos brilham com determina√ß√£o e dor.

'J√° perdi 12 ca√ßadores tentando destru√≠-lo. Mas voc√™... voc√™ tem algo especial. Leve esta estaca de freixo aben√ßoado. Perfure seu cora√ß√£o antes do amanhecer, ou Crimson Vale se tornar√° um reino de trevas eternas.'

**Local:** Castelo Crimson, Vale das Sombras Eternas
**Inimigo:** Vampire Lord Vladimor (500 anos, imortal, mestre da manipula√ß√£o)
**Habilidades:** Controle mental, transforma√ß√£o em morcego, regenera√ß√£o, ex√©rcito de lacaios
**ATEN√á√ÉO:** Extremamente perigoso - party recomendada
**Recompensa:** Capa do Ca√ßador de Vampiros (Lend√°ria)

'Que a luz te proteja nas trevas absolutas.'",
                Difficulty = "Dif√≠cil",
                RequiredLevel = 10,
                RequiredClass = "Any",
                Type = "Main",
                ExperienceReward = 800,
                GoldReward = 1500,
                CreatedAt = DateTime.UtcNow.AddDays(-18)
            },

            new Quest
            {
                Name = "A Torre do Lich King",
                Description = @"üíÄ **O SENHOR DOS MORTOS**

O **Arcebispo Theron**, l√≠der espiritual de Valestra, te convoca √† catedral. Luz sagrada emana de seu cajado enquanto ele aponta para o norte.

'Uma presen√ßa maligna se ergue. A **Torre Negra**, selada h√° mil anos, voltou a brilhar com luz verde doentia. O **LICH KING** desperta!'

Ele desenrola uma profecia antiga.

'Quando o sol se alinhar com a lua negra, o Lich despertar√° e marchar√° com legi√£o de 10.000 mortos. TR√äS DIAS at√© o alinhamento!'

Sua voz ecoa pela catedral.

'Voc√™ deve ESCALAR a Torre Negra, atravessar os 7 n√≠veis de horrores mortos-vivos, e destruir o phylactery do Lich antes que o ritual se complete. Ou Valestra CAIR√Å.'

**Local:** Torre Negra, Terras Desoladas
**Inimigo Final:** Lich King (Necromante supremo, milhares de anos)
**Desafios:** 7 andares, cada um com guardi√£o √∫nico
**Prazo:** 3 dias at√© ritual de despertar completo
**Risco:** EXTREMO - Muitos entraram, nenhum retornou

'Esta pode ser a √∫ltima batalha de Valestra. Fa√ßa valer a pena.'",
                Difficulty = "Dif√≠cil",
                RequiredLevel = 12,
                RequiredClass = "Any",
                Type = "Main",
                ExperienceReward = 1000,
                GoldReward = 2000,
                CreatedAt = DateTime.UtcNow.AddDays(-16)
            },

            // ===== QUESTS √âPICAS (N√≠vel 15-20) =====
            new Quest
            {
                Name = "O Despertar do Drag√£o Anci√£o",
                Description = @"üêâ **A F√öRIA DO C√âU E FOGO**

**Rei Aldric**, monarca de Valestra, te recebe em seu trono. Toda a corte est√° em p√¢nico. Fuma√ßa √© vis√≠vel atrav√©s das janelas do castelo.

'**SMAUG, O DEVASTADOR** despertou! O drag√£o anci√£o que dormia h√° 300 anos nas Montanhas Flamejantes ACORDOU!'

Ele desce do trono, desesperado.

'Tr√™s cidades J√Å FORAM QUEIMADAS. Dez mil mortos. O drag√£o marcha em dire√ß√£o √† capital. Estimo... 2 dias at√© nos alcan√ßar.'

Mapas mostram um rastro de destrui√ß√£o.

'Convoquei todos os her√≥is do reino. Preciso que voc√™ lidere o assalto final. Voar at√© a Montanha Flamejante e **ENFRENTAR SMAUG** em seu covil. √â suic√≠dio... mas √© nossa √öNICA chance.'

Ele te entrega uma espada brilhante.

'Esta √© **Luzardo**, Matadora de Drag√µes, forjada na primeira era. Perfurou o cora√ß√£o de 3 drag√µes. Que perfure o quarto.'

**Local:** Pico da Montanha Flamejante, Covil do Drag√£o
**Inimigo:** Elder Dragon Smaug (300 anos, intelig√™ncia superior, poder destrutivo absoluto)
**Habilidades:** Sopro de fogo apocal√≠ptico, voo, escamas impenetr√°veis, magia drac√¥nica
**ATEN√á√ÉO:** BOSS RAID - PARTY DE 3 HER√ìIS OBRIGAT√ìRIA
**Recompensa:** Tesouro de Smaug (50.000 gold + itens lend√°rios)

'Se falhar... Valestra cai. Sem press√£o.'",
                Difficulty = "√âpico",
                RequiredLevel = 15,
                RequiredClass = "Any",
                Type = "Main",
                ExperienceReward = 2000,
                GoldReward = 5000,
                CreatedAt = DateTime.UtcNow.AddDays(-14)
            },

            new Quest
            {
                Name = "O Portal Demon√≠aco: O Senhor Dem√¥nio Desperta",
                Description = @"üòà **O FIM DOS TEMPOS**

O **Or√°culo Ancestral**, guardi√£o do Cristal do Destino, te convoca com urg√™ncia. O cristal RACHA enquanto vis√µes apocal√≠pticas se manifestam.

'VI O FIM! Um portal para o **ABISMO INFERNAL** foi aberto no **Deserto de Cinzas Eternas**! **BAEL, O SENHOR DEM√îNIO**, l√≠der das legi√µes do inferno, est√° CRUZANDO!'

Vis√µes mostram cidades em chamas, c√©us vermelhos sangue.

'Se Bael cruzar completamente, traz consigo **100.000 DEM√îNIOS**. Valestra, n√£o... TODO O MUNDO cair√° em escravid√£o eterna!'

A voz do Or√°culo se torna um sussurro prof√©tico.

'Voc√™ deve entrar no portal, lutar atrav√©s das legi√µes demon√≠acas, e **DESTRUIR BAEL** antes que ele cruze completamente. Mas cuidado... o Abismo corrompe. Muitos entraram como her√≥is. Voltaram como monstros.'

**Local:** Portal do Abismo, Deserto de Cinzas Eternas
**Inimigo:** Demon Lord Bael (Um dos 7 Senhores do Inferno, poder incompreens√≠vel)
**Ambiente:** O pr√≥prio Abismo - calor extremo, corrup√ß√£o espiritual
**PERIGO M√ÅXIMO:** Pode n√£o haver retorno
**Recompensa:** Salva√ß√£o de toda Valestra + T√≠tulo: Matador de Dem√¥nios

'Que os deuses tenham miseric√≥rdia de sua alma... porque Bael n√£o ter√°.'",
                Difficulty = "√âpico",
                RequiredLevel = 18,
                RequiredClass = "Any",
                Type = "Main",
                ExperienceReward = 3000,
                GoldReward = 10000,
                CreatedAt = DateTime.UtcNow.AddDays(-12)
            },

            new Quest
            {
                Name = "Kraken: O Terror dos Mares Profundos",
                Description = @"ü¶ë **LENDA DAS PROFUNDEZAS**

**Almirante Blackwater**, comandante da Armada Real, te intercepta no porto. Sua m√£o esquerda foi substitu√≠da por um gancho. Ele est√° p√°lido de medo.

'Vi AQUILO com meus pr√≥prios olhos! O **KRAKEN**! A lenda √© REAL! Aquela... COISA... destruiu METADE DA MINHA FROTA!'

Ele bate o gancho na mesa.

'Tent√°culos do tamanho de navios! Olhos grandes como escudos! Mand√≠bulas que engolem galeras inteiras! Perdi 300 homens em 5 minutos!'

L√°grimas escorrem por seu rosto marcado pelo sal.

'Mas n√£o √© s√≥ vingan√ßa. O Kraken bloqueou a **Rota Comercial Mar√≠tima**. Sem ela, Valestra **MORRE DE FOME** em 30 dias. Voc√™ precisa... descer. Ir ao **Abismo Oce√¢nico**. E matar essa ABOMINA√á√ÉO.'

**Local:** Abismo Oce√¢nico, 5000 metros de profundidade
**Inimigo:** Kraken (Lenda viva, 500 anos, imbat√≠vel?)
**Equipamento especial:** Po√ß√£o de Respira√ß√£o Aqu√°tica (fornecida)
**Ambiente:** Combate subaqu√°tico, press√£o extrema, escurid√£o total
**ATEN√á√ÉO:** Muitos tentaram. Todos morreram. Voc√™ ser√° diferente?

'Traga-me um tent√°culo como prova. E... boa sorte. Voc√™ precisar√°.'",
                Difficulty = "√âpico",
                RequiredLevel = 16,
                RequiredClass = "Any",
                Type = "Side",
                ExperienceReward = 2500,
                GoldReward = 7500,
                CreatedAt = DateTime.UtcNow.AddDays(-13)
            },

            // ===== MISS√ïES DE ESCOLTA (N√≠vel 4-6) =====
            new Quest
            {
                Name = "A Caravana Perdida",
                Description = @"üõí **MERCADORES EM PERIGO**

**Marcus, o Mercador**, gesticula desesperadamente ao te ver. Suor escorre por seu rosto enquanto ele desdobra um mapa rasgado.

'Minha caravana! Estava indo para Porto √Çncora com tecidos raros quando fomos atacados por bandidos na **Passagem do Corvo Negro**!'

Ele aponta com dedos tremulantes no mapa.

'Consegui fugir, mas meus tr√™s guardas e todo meu estoque ficaram l√°! Eles v√£o matar todos se n√£o conseguirem o resgate em 24 HORAS!'

L√°grimas escorrem.

'Por favor... eu pago tudo que tenho. S√≥... traga-os de volta vivos. S√£o como fam√≠lia para mim.'

**Objetivo:** Resgatar os 3 guardas e recuperar a mercadoria
**Local:** Passagem do Corvo Negro
**Inimigos:** Bandidos (15-20 bandidos armados)
**Tempo:** 24 horas
**B√¥nus:** Se ningu√©m morrer, recompensa duplicada",
                Difficulty = "M√©dio",
                RequiredLevel = 4,
                RequiredClass = "Any",
                Type = "Side",
                ExperienceReward = 300,
                GoldReward = 400,
                CreatedAt = DateTime.UtcNow.AddDays(-26)
            },

            // ===== MISS√ïES DE INVESTIGA√á√ÉO (N√≠vel 6-8) =====
            new Quest
            {
                Name = "O Mist√©rio do Cult da Lua Negra",
                Description = @"üîç **DESAPARECIMENTOS MISTERIOSOS**

**Detetive Helena Blackwood**, investigadora real, te mostra um quadro com fotos e linhas vermelhas conectando pontos.

'Nos √∫ltimos 3 meses, **17 pessoas desapareceram** em Thornwood. Todas na lua nova. Todas deixaram este s√≠mbolo.'

Ela mostra um desenho: uma lua negra com tr√™s garras.

'Segui as pistas at√© um galp√£o abandonado nos **Docas Velhas**. Vi figuras encapuzadas entrando √† meia-noite. Rituais. C√¢nticos. Algo... sobrenatural.'

Sua m√£o vai instintivamente para a arma.

'Preciso de algu√©m com... habilidades especiais. Infiltre-se no culto. Descubra o que est√£o planejando. E se poss√≠vel... ACABE COM ISSO.'

**Objetivo:** 
‚Ä¢ Infiltrar o Culto da Lua Negra
‚Ä¢ Descobrir o plano deles
‚Ä¢ Resgatar as v√≠timas
‚Ä¢ Eliminar o l√≠der do culto

**Local:** Docas Velhas ‚Üí Templo Subterr√¢neo
**Perigo:** Cultistas (m√°gicos), poss√≠vel dem√¥nio invocado
**Recompensa especial:** Distintivo de Investigador Real",
                Difficulty = "M√©dio",
                RequiredLevel = 6,
                RequiredClass = "Any",
                Type = "Main",
                ExperienceReward = 550,
                GoldReward = 800,
                CreatedAt = DateTime.UtcNow.AddDays(-24)
            },

            new Quest
            {
                Name = "O Ladr√£o Fantasma de Porto √Çncora",
                Description = @"üë§ **O IMPOSS√çVEL SE TORNA REAL**

**Capit√£o da Guarda Sullivan** te recebe em seu escrit√≥rio. Tr√™s cofres abertos e vazios est√£o alinhados na mesa.

'Em 7 dias, **7 roubos imposs√≠veis**. Todos os cofres trancados com magia. Todas as guardas patrulhando. Ningu√©m viu NADA.'

Ele esfrega as t√™mporas.

'As v√≠timas? Os homens mais ricos da cidade. O √∫ltimo foi o **Bar√£o Thornhill** - roubado enquanto dormia no mesmo quarto que o cofre. Acordou e o ouro tinha SUMIDO.'

Um mapa da cidade com marca√ß√µes vermelhas.

'Contratei 20 guardas extras. Instalei alarmes m√°gicos. E ontem? Roubaram a PR√ìPRIA SALA DO TESOURO DA GUILDA!'

Sua voz tremula de raiva e medo.

'Isso n√£o √© normal. √â magia. Ou algo pior. Pegue esse fantasma antes que a cidade entre em p√¢nico total.'

**Objetivo:** Investigar padr√µes, encontrar e capturar o ladr√£o
**Pistas:** Todos os roubos foram entre 2h e 3h da manh√£
**Suspeitos:** Poss√≠vel mago-ladr√£o ou criatura et√©rea
**Recompensa:** 20% do ouro recuperado",
                Difficulty = "M√©dio",
                RequiredLevel = 7,
                RequiredClass = "Any",
                Type = "Side",
                ExperienceReward = 480,
                GoldReward = 650,
                CreatedAt = DateTime.UtcNow.AddDays(-22)
            },

            // ===== MISS√ïES DE COLETA √âPICA (N√≠vel 8-10) =====
            new Quest
            {
                Name = "Os Tr√™s Artefatos Perdidos do Rei Antigo",
                Description = @"üëë **A HERAN√áA DO REI LOUCO**

**Arquivista Eldrin**, guardi√£o da biblioteca real, desenrola um pergaminho com 1000 anos.

'O Rei Malachar, o Louco, antes de sua morte, dividiu seu poder em **TR√äS ARTEFATOS**. Separou-os para que ningu√©m pudesse reun√≠-los.'

Ele aponta para ilustra√ß√µes antigas.

'A **Coroa da Domina√ß√£o** - escondida na Catacumba Real
A **Espada da Destrui√ß√£o** - guardada pelo Drag√£o de Gelo nas Montanhas Congeladas  
O **Anel da Imortalidade** - nas profundezas do Templo Submerso'

Sua express√£o se torna grave.

'Recentemente, cultistas come√ßaram a procurar os artefatos. Se REUNIREM os tr√™s, podem ressuscitar Malachar. E isso significaria... o FIM DE VALESTRA.'

Ele te entrega um mapa antigo.

'Encontre os tr√™s artefatos ANTES deles. E quando tiver todos... destrua-os. Para sempre.'

**Objetivos:**
‚Ä¢ Recuperar a Coroa (Catacumba Real - N√≠vel 8)
‚Ä¢ Recuperar a Espada (Montanha Congelada - N√≠vel 9)  
‚Ä¢ Recuperar o Anel (Templo Submerso - N√≠vel 10)
‚Ä¢ Destruir os tr√™s na Forja Sagrada

**Perigo:** M√ÅXIMO - 3 dungeons √©picas
**Dura√ß√£o:** Sem limite, mas cultistas tamb√©m est√£o procurando",
                Difficulty = "Dif√≠cil",
                RequiredLevel = 8,
                RequiredClass = "Any",
                Type = "Main",
                ExperienceReward = 1200,
                GoldReward = 2500,
                CreatedAt = DateTime.UtcNow.AddDays(-20)
            },

            // ===== MISS√ïES DE DEFESA (N√≠vel 5-7) =====
            new Quest
            {
                Name = "A Noite das Hordas: Defesa de Vila Esperan√ßa",
                Description = @"üè∞ **APOCALIPSE ZUMBI**

**Prefeita Elena**, de Vila Esperan√ßa, est√° em prantos. Voc√™ pode ver fuma√ßa ao longe.

'O necromante que voc√™s DEIXARAM ESCAPAR na Torre Negra... ele voltou. E trouxe uma HORDA DE MORTOS-VIVOS!'

Ela aponta para a vila cercada.

'300 pessoas est√£o aqui. Crian√ßas. Idosos. Temos muros fracos e apenas 12 guardas. A horda tem **MIL MORTOS-VIVOS** e chegar√° ao amanhecer.'

L√°grimas de desespero.

'N√£o podemos evacuar - eles bloqueariam a estrada. N√£o podemos negociar - eles n√£o s√£o humanos mais. S√≥ podemos... LUTAR.'

Ela te entrega uma espada.

'Organize a defesa. Fortifique os muros. Proteja meu povo. At√© o amanhecer. Se sobrevivermos... tudo que temos √© seu.'

**Formato:** Defesa em Ondas
**Ondas:** 5 ondas de 200 mortos-vivos cada
**Objetivo:** Sobreviver at√© o amanhecer (5 ondas)
**Penalidade:** Cada civil morto = -50 Gold
**B√¥nus:** 0 civis mortos = +1000 Gold extra",
                Difficulty = "M√©dio",
                RequiredLevel = 5,
                RequiredClass = "Any",
                Type = "Main",
                ExperienceReward = 700,
                GoldReward = 1000,
                CreatedAt = DateTime.UtcNow.AddDays(-19)
            },

            // ===== MISS√ïES DE ARENA (N√≠vel 10-12) =====
            new Quest
            {
                Name = "Campe√£o da Arena Sangrenta",
                Description = @"‚öîÔ∏è **GL√ìRIA OU MORTE**

**Mestre da Arena Brutus**, um gigante com cicatrizes por todo corpo, te analisa com olhos de predador.

'Ent√£o... quer entrar na ARENA? Ver se √© p√°reo para os VERDADEIROS guerreiros de Valestra?'

Ele cospe no ch√£o.

'A Arena Sangrenta n√£o √© para her√≥izinhos de conto de fadas. √â SANGUE. √â DOR. √â MORTE. 87 entraram este ano. 12 sa√≠ram vivos.'

Um sorriso cruel.

'Mas se VENCER... 5 lutas. 5 oponentes cada vez mais mortais. Se sobreviver ao 5¬∫ combate... ser√° CAMPE√ÉO. Fama eterna. Riquezas. E este.'

Ele mostra um cinto cravejado de joias.

'O Cinto do Campe√£o. S√≥ 3 pessoas vivas o conquistaram. Quer ser o 4¬∫? Ou mais um nome na lista de MORTOS?'

**Formato:** 5 Combates Progressivos
‚Ä¢ Combate 1: Guerreiro Veterano (D6, Roll 4)
‚Ä¢ Combate 2: Campe√£ √âlfica (D8, Roll 5)
‚Ä¢ Combate 3: Troll Blindado (D8, Roll 6)
‚Ä¢ Combate 4: Dupla de Gladiadores (D12, Roll 8)
‚Ä¢ Combate 5: Campe√£o Defensor - Gorath, o Imortal (D12, Roll 9)

**Regra:** N√ÉO PODE FUGIR. Vence ou morre.
**Pr√™mio:** Cinto do Campe√£o + 5000 Gold + T√≠tulo",
                Difficulty = "Dif√≠cil",
                RequiredLevel = 10,
                RequiredClass = "Any",
                Type = "Side",
                ExperienceReward = 900,
                GoldReward = 5000,
                CreatedAt = DateTime.UtcNow.AddDays(-17)
            },

            // ===== MISS√ïES DE RESGATE √âPICO (N√≠vel 12-14) =====
            new Quest
            {
                Name = "Resgate na Torre de Ferro: A Princesa Sequestrada",
                Description = @"üë∏ **O REI IMPLORA**

**Rei Aldric**, com os olhos vermelhos de tanto chorar, segura tua m√£o com desespero.

'Minha filha... minha **Princesa Elara**... LEVADA por um drag√£o negro! H√° 3 dias!'

Ele desmorona na frente do trono.

'O drag√£o **Nightwing** a mant√©m presa na **Torre de Ferro**, nas Montanhas Amaldi√ßoadas. Mandei 3 grupos de resgate. Nenhum voltou.'

Guardas seguram o rei que parece √† beira da loucura.

'ELA √â TUDO QUE ME RESTA! Minha esposa morreu no parto. Elara √©... tudo. TUDO!'

Ele se levanta, com olhos de determina√ß√£o demente.

'Traga-a de volta. VIVA. E te darei... METADE DO REINO. Castelos. Terras. Ouro. Tudo. S√≥... TRAGA MINHA FILHA DE VOLTA!'

**Objetivo:** Resgatar Princesa Elara da Torre de Ferro
**Inimigos:** 
‚Ä¢ Guardas Kobold (D6)
‚Ä¢ Wyverns Guardi√£s (D8)
‚Ä¢ Nightwing, o Drag√£o Negro (D20, Roll 17) - BOSS

**Complica√ß√£o:** Princesa est√° sob feiti√ßo de sono - precisa de beijo verdadeiro OU po√ß√£o de despertar
**Recompensa:** Metade do tesouro real + T√≠tulo de Duque/Duquesa",
                Difficulty = "√âpico",
                RequiredLevel = 12,
                RequiredClass = "Any",
                Type = "Main",
                ExperienceReward = 1500,
                GoldReward = 8000,
                CreatedAt = DateTime.UtcNow.AddDays(-15)
            },

            // ===== MISS√ïES DE CA√áA (N√≠vel 3-5) =====
            new Quest
            {
                Name = "A Grande Ca√ßada: O Javali de Ferro",
                Description = @"üêó **LENDA VIVA**

**Ca√ßador-Mor Wilhelm**, coberto de cicatrizes, mostra uma presa de javali do tamanho do teu bra√ßo.

'50 anos de ca√ßada. Matei ursos, lobos, at√© um wyvern jovem. Mas H√Å UMA criatura que sempre escapou.'

Olhos brilham com obsess√£o.

'O **Javali de Ferro**. 800 quilos de m√∫sculo e f√∫ria. Dizem que tem 100 anos. Pele dura como a√ßo. Chifres que perfuram carvalhos.'

Ele mostra um mapa da Floresta Negra.

'Vive nas profundezas da Floresta Negra. J√° matou 23 ca√ßadores. Meu irm√£o foi um deles, h√° 10 anos.'

Voz se quebra.

'Estou velho. Minha √∫ltima chance. Me ajude a ca√ßar a besta. Morte ou gl√≥ria. Uma √∫ltima ca√ßada √âPICA.'

**Objetivo:** Rastrear e abater o Javali de Ferro
**Desafio:** Rastreamento (INT check), depois combate
**Inimigo:** Iron Boar (D8, Roll 6, Alta Defesa)
**Trof√©u:** Presas de Ferro (item lend√°rio para crafting)",
                Difficulty = "M√©dio",
                RequiredLevel = 3,
                RequiredClass = "Any",
                Type = "Side",
                ExperienceReward = 250,
                GoldReward = 350,
                CreatedAt = DateTime.UtcNow.AddDays(-25)
            },

            new Quest
            {
                Name = "Exterm√≠nio: Ninho de Aranhas Gigantes",
                Description = @"üï∑Ô∏è **PESADELO DE 8 PATAS**

**Fazendeiro Thomas**, com bra√ßo enfaixado sangrando, aponta para o celeiro.

'Come√ßou com ovelhas desaparecendo. Depois galinhas. Ontem... meu FILHO quase foi arrastado!'

Ele quebra em solu√ßos.

'H√° um NINHO no celeiro. Aranhas do tamanho de c√£es. Teias por toda parte. Ou√ßo algo GRANDE l√° dentro... a m√£e delas.'

Tremendo de medo.

'N√£o posso chamar a guarda - demoram dias. Minha fam√≠lia est√° trancada em casa. PRECISO DO CELEIRO LIMPO! √â nossa colheita de inverno inteira!'

**Objetivo:** Exterminar ninho de aranhas
**Inimigos:** 
‚Ä¢ 15-20 Aranhas Gigantes (D6, Roll 3)
‚Ä¢ 1 Aranha Rainha (D8, Roll 6) - Veneno

**Perigo:** Teias reduzem movimento
**B√¥nus:** Sacos de ovos destru√≠dos = +100 Gold cada",
                Difficulty = "F√°cil",
                RequiredLevel = 2,
                RequiredClass = "Any",
                Type = "Side",
                ExperienceReward = 180,
                GoldReward = 200,
                CreatedAt = DateTime.UtcNow.AddDays(-29)
            },

            // ===== MISS√ïES C√îMIC RELIEF (N√≠vel 1-3) =====
            new Quest
            {
                Name = "O Gato da Bruxa: Miss√£o Imposs√≠vel",
                Description = @"üò∫ **NUNCA SUBESTIME UM GATO**

**Bruxa Morgana**, uma senhora de 80 anos, te olha com olhos lacrimejantes.

'Meu Senhor Bigodes... meu gatinho... subiu na **√ÅRVORE ANCESTRAL** h√° 3 dias e n√£o desce!'

Ela aponta para uma √°rvore de 50 metros de altura.

'J√° tentei magia, mas ele √© imune (experimentei nele quando era beb√™). Tentei comida, n√£o desce. Tentei rezar, n√£o funcionou!'

L√°grimas escorrem.

'Ele √© TUDO que tenho! Sem ele... eu... eu...'

Ela se recomp√µe, secando as l√°grimas.

'Me ajude a resgatar Senhor Bigodes e te darei uma po√ß√£o da juventude que estou guardando h√° 30 anos.'

**Objetivo:** Subir na √Årvore Ancestral e resgatar o gato
**Desafio:** Escalada (DEX check) + Convencer o gato (CHA check)
**Complica√ß√£o:** O gato n√£o quer descer. Tenta arranhar voc√™.
**Recompensa:** Po√ß√£o da Juventude (-10 anos de apar√™ncia)",
                Difficulty = "F√°cil",
                RequiredLevel = 1,
                RequiredClass = "Any",
                Type = "Side",
                ExperienceReward = 50,
                GoldReward = 100,
                CreatedAt = DateTime.UtcNow.AddDays(-30)
            },

            new Quest
            {
                Name = "A Taverna do Caos: Pare a Briga!",
                Description = @"üç∫ **DESTRUI√á√ÉO ALCO√ìLICA**

**Taverneiro Brutus**, desesperado, te puxa para dentro da taverna.

Caos total. 30 b√™bados brigando. Mesas quebradas. Barris rolando. Algu√©m est√° PENDURADO NO LUSTRE.

'COME√áOU COM UMA DISCUSS√ÉO SOBRE QUAL DRAG√ÉO √â MAIS FORTE! AGORA EST√ÉO DESTRUINDO MEU BAR!'

Ele grita por cima do barulho.

'SE N√ÉO PARAR ESSA BRIGA, VOU TER PREJU√çZO DE 1000 GOLD! FA√áA ALGUMA COISA!'

Um b√™bado voa pela janela.

**Objetivo:** Parar a briga na taverna
**Desafio:** Op√ß√µes m√∫ltiplas:
‚Ä¢ Intimida√ß√£o (STR check) - Nocautear todo mundo
‚Ä¢ Persuas√£o (CHA check) - Oferecer rodada gr√°tis  
‚Ä¢ Magia (INT check) - Feiti√ßo de sono em massa
‚Ä¢ Criatividade (sua escolha!)

**B√¥nus:** Menos dano √† taverna = mais recompensa
**Puni√ß√£o:** Se taverna for destru√≠da completamente = 0 gold",
                Difficulty = "F√°cil",
                RequiredLevel = 2,
                RequiredClass = "Any",
                Type = "Side",
                ExperienceReward = 100,
                GoldReward = 150,
                CreatedAt = DateTime.UtcNow.AddDays(-28)
            },

            // ===== MISS√ïES DE CRAFTING (N√≠vel 6-9) =====
            new Quest
            {
                Name = "O Ferreiro Mestre: Forja de uma L√¢mina Lend√°ria",
                Description = @"üî® **OBRA-PRIMA FINAL**

**Mestre Ferreiro Gareth**, com 60 anos de experi√™ncia, mostra projetos antigos.

'Meu av√¥ forjou espadas para reis. Meu pai para her√≥is. Eu... quero forjar UMA L√ÇMINA LEND√ÅRIA antes de morrer.'

Ele desenrola um pergaminho com designs complexos.

'**Starfall** - assim a chamarei. Mas preciso de materiais IMPOSS√çVEIS:

‚Ä¢ A√ßo de Meteoro (do meteoro nas Plan√≠cies de Fogo)
‚Ä¢ Cora√ß√£o de Elemental de Fogo (das Cavernas Vulc√¢nicas)
‚Ä¢ √Ågua Benta da Fonte Sagrada (no Templo dos Antigos)
‚Ä¢ Ess√™ncia de Estrela Cadente (precisa coletar √† meia-noite)'

Olhos brilham.

'Traga-me esses materiais e forjarei uma espada que ser√° LENDA por mil anos. Uma espada digna de her√≥is.'

**Objetivos:**
‚Ä¢ Coletar A√ßo de Meteoro
‚Ä¢ Derrotar Elemental e pegar seu cora√ß√£o
‚Ä¢ Conseguir √Ågua Benta
‚Ä¢ Capturar Ess√™ncia de Estrela (evento raro)

**Recompensa:** Espada Lend√°ria personalizada com seu nome",
                Difficulty = "Dif√≠cil",
                RequiredLevel = 9,
                RequiredClass = "Any",
                Type = "Main",
                ExperienceReward = 850,
                GoldReward = 0,
                CreatedAt = DateTime.UtcNow.AddDays(-18)
            },

            // ===== MISS√ïES DE HORROR (N√≠vel 13-15) =====
            new Quest
            {
                Name = "O Manic√¥mio Abandonado: Esp√≠ritos Torturados",
                Description = @"üëª **ONDE A LOUCURA REINA**

**M√©dium Elizabeth**, sensitiva espiritual, est√° p√°lida de terror.

'Sinto... tantas almas. MILHARES. Todas presas. Todas... SOFRENDO.'

Ela aponta para o Manic√¥mio Ravenwood, abandonado h√° 50 anos.

'O Diretor era um s√°dico. Experimentava em pacientes. Torturas. Lobotomias. Horrores inimagin√°veis. Um dia... os pacientes se rebelaram. Mataram todos os m√©dicos. E ent√£o... TRANCARAM AS PORTAS DE DENTRO.'

Ela treme.

'Encontraram 200 corpos meses depois. Pacientes que se entre-mataram. Agora... seus esp√≠ritos vagam. Presos entre mundos. Em AGONIA ETERNA.'

L√°grimas.

'Preciso que entre l√°. Encontre os restos do Diretor. QUEIME seu di√°rio maldito. √â o que os prende. Liberte essas almas.'

**Local:** Manic√¥mio Ravenwood (3 andares de horror)
**Perigos:**
‚Ä¢ Esp√≠ritos Enfurecidos
‚Ä¢ Armadilhas psicol√≥gicas
‚Ä¢ Testes de sanidade
‚Ä¢ Boss: Fantasma do Diretor (D12, Roll 10)

**Aviso:** Pode afetar sanidade mental do her√≥i",
                Difficulty = "Dif√≠cil",
                RequiredLevel = 13,
                RequiredClass = "Any",
                Type = "Side",
                ExperienceReward = 1100,
                GoldReward = 1800,
                CreatedAt = DateTime.UtcNow.AddDays(-14)
            }
        };

        _context.Quests.AddRange(quests);
        await _context.SaveChangesAsync();
        _logger.LogInformation("üéØ {Count} quests criadas (incluindo quest tutorial)", quests.Count);
    }

    private async Task SeedRewardsAsync()
    {
        var quests = await _context.Quests.ToListAsync();
        var items = await _context.Items.ToListAsync();
        var rewards = new List<Reward>();

        var questRewardMap = new Dictionary<string, int?>
        {
            { "Ca√ßa aos Goblins", items.FirstOrDefault(i => i.Name == "Espada de Ferro")?.Id },
            { "Coleta de Ervas", items.FirstOrDefault(i => i.Name == "Po√ß√£o de Cura Menor")?.Id },
            { "Limpeza do Cemit√©rio", items.FirstOrDefault(i => i.Name == "Armadura de Couro")?.Id },
            { "A Invas√£o Orc", items.FirstOrDefault(i => i.Name == "Cota de Malha")?.Id },
            { "O Feiticeiro das Sombras", items.FirstOrDefault(i => i.Name == "Cajado Ancestral")?.Id },
            { "Ca√ßada ao Lobisomem", items.FirstOrDefault(i => i.Name == "Po√ß√£o de For√ßa")?.Id },
            { "O Covil do Troll", items.FirstOrDefault(i => i.Name == "Escudo de Madeira")?.Id },
            { "O Vampiro Ancestral", items.FirstOrDefault(i => i.Name == "Manto M√°gico")?.Id },
            { "A Maldi√ß√£o do Templo", items.FirstOrDefault(i => i.Name == "Po√ß√£o de Mana")?.Id },
            { "O Drag√£o das Montanhas", items.FirstOrDefault(i => i.Name == "Espada Flamejante")?.Id },
            { "O Despertar do Balrog", items.FirstOrDefault(i => i.Name == "Armadura de Placas")?.Id },
            { "O Senhor dos Liches", items.FirstOrDefault(i => i.Name == "Escudo de Mithril")?.Id },
            { "Kraken dos Mares", items.FirstOrDefault(i => i.Name == "Espada √âlfica")?.Id }
        };

        foreach (var quest in quests)
        {
            questRewardMap.TryGetValue(quest.Name, out var itemId);
            
            rewards.Add(new Reward
            {
                QuestId = quest.Id,
                Gold = quest.GoldReward,
                Experience = quest.ExperienceReward,
                ItemId = itemId,
                ItemQuantity = itemId.HasValue ? 1 : 0,
                CreatedAt = quest.CreatedAt
            });
        }

        _context.Rewards.AddRange(rewards);
        await _context.SaveChangesAsync();
        _logger.LogInformation("üí∞ {Count} recompensas criadas", rewards.Count);
    }

    private async Task SeedQuestEnemiesAsync()
    {
        var quests = await _context.Quests.ToListAsync();
        var enemies = await _context.Enemies.ToListAsync();
        var questEnemies = new List<QuestEnemy>();

        // Quest 1: Ca√ßa aos Goblins
        questEnemies.Add(new QuestEnemy { QuestId = quests[0].Id, EnemyId = enemies[0].Id, Quantity = 10 });
        
        // Quest 2: Limpeza do Cemit√©rio
        questEnemies.Add(new QuestEnemy { QuestId = quests[2].Id, EnemyId = enemies[2].Id, Quantity = 15 });
        
        // Quest 3: A Invas√£o Orc
        questEnemies.Add(new QuestEnemy { QuestId = quests[3].Id, EnemyId = enemies[1].Id, Quantity = 5 });
        questEnemies.Add(new QuestEnemy { QuestId = quests[3].Id, EnemyId = enemies[5].Id, Quantity = 1 });
        
        // Quest 4: O Feiticeiro das Sombras
        questEnemies.Add(new QuestEnemy { QuestId = quests[4].Id, EnemyId = enemies[6].Id, Quantity = 1 });
        
        // Quest 5: Ca√ßada ao Lobisomem
        questEnemies.Add(new QuestEnemy { QuestId = quests[5].Id, EnemyId = enemies[9].Id, Quantity = 1 });
        
        // Quest 6: O Covil do Troll
        questEnemies.Add(new QuestEnemy { QuestId = quests[6].Id, EnemyId = enemies[7].Id, Quantity = 1 });
        
        // Quest 7: O Vampiro Ancestral
        questEnemies.Add(new QuestEnemy { QuestId = quests[7].Id, EnemyId = enemies[8].Id, Quantity = 1 });
        
        // Quest 8: O Drag√£o das Montanhas
        questEnemies.Add(new QuestEnemy { QuestId = quests[9].Id, EnemyId = enemies[11].Id, Quantity = 1 });
        
        // Quest 9: O Despertar do Balrog
        questEnemies.Add(new QuestEnemy { QuestId = quests[10].Id, EnemyId = enemies[13].Id, Quantity = 1 });
        
        // Quest 10: O Senhor dos Liches
        questEnemies.Add(new QuestEnemy { QuestId = quests[11].Id, EnemyId = enemies[12].Id, Quantity = 1 });
        
        // Quest 11: Kraken dos Mares
        questEnemies.Add(new QuestEnemy { QuestId = quests[12].Id, EnemyId = enemies[14].Id, Quantity = 1 });

        _context.QuestEnemies.AddRange(questEnemies);
        await _context.SaveChangesAsync();
        _logger.LogInformation("‚öîÔ∏è {Count} relacionamentos quest-inimigo criados", questEnemies.Count);
    }

    private async Task SeedHeroItemsAsync()
    {
        var heroes = await _context.Heroes.ToListAsync();
        var items = await _context.Items.ToListAsync();
        var heroItems = new List<HeroItem>();

        // Aragorn (Guerreiro) - Equipado para combate
        heroItems.Add(new HeroItem { HeroId = heroes[0].Id, ItemId = items[2].Id, Quantity = 1, IsEquipped = true }); // Espada Flamejante
        heroItems.Add(new HeroItem { HeroId = heroes[0].Id, ItemId = items[7].Id, Quantity = 1, IsEquipped = true }); // Armadura de Placas
        heroItems.Add(new HeroItem { HeroId = heroes[0].Id, ItemId = items[11].Id, Quantity = 3, IsEquipped = false }); // Po√ß√µes de Cura

        // Gandalf (Mago) - Equipado para magia
        heroItems.Add(new HeroItem { HeroId = heroes[1].Id, ItemId = items[3].Id, Quantity = 1, IsEquipped = true }); // Cajado Ancestral
        heroItems.Add(new HeroItem { HeroId = heroes[1].Id, ItemId = items[8].Id, Quantity = 1, IsEquipped = true }); // Manto M√°gico
        heroItems.Add(new HeroItem { HeroId = heroes[1].Id, ItemId = items[13].Id, Quantity = 2, IsEquipped = false }); // Po√ß√£o de Mana

        // Legolas (Arqueiro) - Equipado para precis√£o
        heroItems.Add(new HeroItem { HeroId = heroes[2].Id, ItemId = items[4].Id, Quantity = 1, IsEquipped = true }); // Arco √âlfico
        heroItems.Add(new HeroItem { HeroId = heroes[2].Id, ItemId = items[5].Id, Quantity = 1, IsEquipped = true }); // Armadura de Couro
        heroItems.Add(new HeroItem { HeroId = heroes[2].Id, ItemId = items[14].Id, Quantity = 2, IsEquipped = false }); // Elixir de Agilidade

        // Adicionar alguns itens para outros her√≥is tamb√©m
        for (int i = 3; i < Math.Min(8, heroes.Count); i++)
        {
            heroItems.Add(new HeroItem { HeroId = heroes[i].Id, ItemId = items[0].Id, Quantity = 1, IsEquipped = true });
            heroItems.Add(new HeroItem { HeroId = heroes[i].Id, ItemId = items[11].Id, Quantity = 1, IsEquipped = false });
        }

        _context.HeroItems.AddRange(heroItems);
        await _context.SaveChangesAsync();
        _logger.LogInformation("üéí {Count} itens adicionados aos invent√°rios", heroItems.Count);
    }

    private async Task SeedHeroQuestsAsync()
    {
        var heroes = await _context.Heroes.ToListAsync();
        var quests = await _context.Quests.ToListAsync();
        var heroQuests = new List<HeroQuest>();

        // Aragorn completou v√°rias quests
        heroQuests.Add(new HeroQuest { HeroId = heroes[0].Id, QuestId = quests[0].Id, IsCompleted = true, StartedAt = DateTime.UtcNow.AddDays(-20), CompletedAt = DateTime.UtcNow.AddDays(-20) });
        heroQuests.Add(new HeroQuest { HeroId = heroes[0].Id, QuestId = quests[2].Id, IsCompleted = true, StartedAt = DateTime.UtcNow.AddDays(-18), CompletedAt = DateTime.UtcNow.AddDays(-18) });
        heroQuests.Add(new HeroQuest { HeroId = heroes[0].Id, QuestId = quests[3].Id, IsCompleted = true, StartedAt = DateTime.UtcNow.AddDays(-15), CompletedAt = DateTime.UtcNow.AddDays(-15) });
        heroQuests.Add(new HeroQuest { HeroId = heroes[0].Id, QuestId = quests[7].Id, IsCompleted = true, StartedAt = DateTime.UtcNow.AddDays(-10), CompletedAt = DateTime.UtcNow.AddDays(-10) });
        heroQuests.Add(new HeroQuest { HeroId = heroes[0].Id, QuestId = quests[10].Id, IsCompleted = false, StartedAt = DateTime.UtcNow.AddDays(-2) });

        // Gandalf completou quests √©picas
        heroQuests.Add(new HeroQuest { HeroId = heroes[1].Id, QuestId = quests[4].Id, IsCompleted = true, StartedAt = DateTime.UtcNow.AddDays(-16), CompletedAt = DateTime.UtcNow.AddDays(-16) });
        heroQuests.Add(new HeroQuest { HeroId = heroes[1].Id, QuestId = quests[8].Id, IsCompleted = true, StartedAt = DateTime.UtcNow.AddDays(-12), CompletedAt = DateTime.UtcNow.AddDays(-12) });
        heroQuests.Add(new HeroQuest { HeroId = heroes[1].Id, QuestId = quests[10].Id, IsCompleted = true, StartedAt = DateTime.UtcNow.AddDays(-8), CompletedAt = DateTime.UtcNow.AddDays(-8) });
        heroQuests.Add(new HeroQuest { HeroId = heroes[1].Id, QuestId = quests[11].Id, IsCompleted = false, StartedAt = DateTime.UtcNow.AddDays(-1) });

        // Legolas
        heroQuests.Add(new HeroQuest { HeroId = heroes[2].Id, QuestId = quests[0].Id, IsCompleted = true, StartedAt = DateTime.UtcNow.AddDays(-19), CompletedAt = DateTime.UtcNow.AddDays(-19) });
        heroQuests.Add(new HeroQuest { HeroId = heroes[2].Id, QuestId = quests[5].Id, IsCompleted = true, StartedAt = DateTime.UtcNow.AddDays(-14), CompletedAt = DateTime.UtcNow.AddDays(-14) });
        heroQuests.Add(new HeroQuest { HeroId = heroes[2].Id, QuestId = quests[9].Id, IsCompleted = false, StartedAt = DateTime.UtcNow.AddDays(-3) });

        // Outros her√≥is com quests em andamento
        for (int i = 3; i < Math.Min(7, heroes.Count); i++)
        {
            heroQuests.Add(new HeroQuest { HeroId = heroes[i].Id, QuestId = quests[0].Id, IsCompleted = true, StartedAt = DateTime.UtcNow.AddDays(-10), CompletedAt = DateTime.UtcNow.AddDays(-9) });
            heroQuests.Add(new HeroQuest { HeroId = heroes[i].Id, QuestId = quests[1].Id, IsCompleted = false, StartedAt = DateTime.UtcNow.AddDays(-5) });
        }

        _context.HeroQuests.AddRange(heroQuests);
        await _context.SaveChangesAsync();
        _logger.LogInformation("üìú {Count} quests atribu√≠das aos her√≥is", heroQuests.Count);
    }

    private async Task SeedBossDropTableAsync()
    {
        var enemies = await _context.Enemies.ToListAsync();
        var items = await _context.Items.ToListAsync();

        var bosses = enemies.Where(e => e.IsBoss).ToList();
        if (!bosses.Any())
        {
            _logger.LogWarning("Nenhum boss encontrado para configurar drops");
            return;
        }

        var dropTables = new List<BossDropTable>();

        // Itens comuns que todos os bosses podem dropar (60% chance)
        var commonItems = items.Where(i => i.Rarity == ItemRarity.Common).ToList();

        foreach (var boss in bosses)
        {
            // Cada boss dropa 2-3 itens comuns
            for (int i = 0; i < Math.Min(3, commonItems.Count); i++)
            {
                dropTables.Add(new BossDropTable
                {
                    EnemyId = boss.Id,
                    ItemId = commonItems[i].Id,
                    DropChance = 0.60m, // 60%
                    IsExclusive = false
                });
            }
        }

        // Demon Lord Drops
        var demonLord = bosses.FirstOrDefault(b => b.Name == "Demon Lord");
        if (demonLord != null)
        {
            var espadaFlamejante = items.FirstOrDefault(i => i.Name == "Espada Flamejante");
            var laminaDemoniaca = items.FirstOrDefault(i => i.Name == "L√¢mina Demon√≠aca: Corruptor");
            
            if (espadaFlamejante != null)
                dropTables.Add(new BossDropTable { EnemyId = demonLord.Id, ItemId = espadaFlamejante.Id, DropChance = 0.30m, IsExclusive = true });
            if (laminaDemoniaca != null)
                dropTables.Add(new BossDropTable { EnemyId = demonLord.Id, ItemId = laminaDemoniaca.Id, DropChance = 0.10m, IsExclusive = true });
        }

        // Elder Dragon Drops
        var elderDragon = bosses.FirstOrDefault(b => b.Name == "Elder Dragon");
        if (elderDragon != null)
        {
            var escamaDragao = items.FirstOrDefault(i => i.Name == "Escama do Drag√£o Anci√£o");
            var coracaoDragao = items.FirstOrDefault(i => i.Name == "Cora√ß√£o do Drag√£o");
            
            if (escamaDragao != null)
                dropTables.Add(new BossDropTable { EnemyId = elderDragon.Id, ItemId = escamaDragao.Id, DropChance = 0.35m, IsExclusive = true });
            if (coracaoDragao != null)
                dropTables.Add(new BossDropTable { EnemyId = elderDragon.Id, ItemId = coracaoDragao.Id, DropChance = 0.05m, IsExclusive = true }); // 5% - MUITO RARO!
        }

        // Lich King Drops
        var lichKing = bosses.FirstOrDefault(b => b.Name == "Lich King");
        if (lichKing != null)
        {
            var cajadoLich = items.FirstOrDefault(i => i.Name == "Cajado do Lich");
            var coroaLich = items.FirstOrDefault(i => i.Name == "Coroa do Lich King");
            
            if (cajadoLich != null)
                dropTables.Add(new BossDropTable { EnemyId = lichKing.Id, ItemId = cajadoLich.Id, DropChance = 0.30m, IsExclusive = true });
            if (coroaLich != null)
                dropTables.Add(new BossDropTable { EnemyId = lichKing.Id, ItemId = coroaLich.Id, DropChance = 0.08m, IsExclusive = true });
        }

        // Balrog Drops
        var balrog = bosses.FirstOrDefault(b => b.Name == "Balrog");
        if (balrog != null)
        {
            var chicoteFlamejante = items.FirstOrDefault(i => i.Name == "Chicote Flamejante");
            var foiceBalrog = items.FirstOrDefault(i => i.Name == "Foice do Balrog");
            
            if (chicoteFlamejante != null)
                dropTables.Add(new BossDropTable { EnemyId = balrog.Id, ItemId = chicoteFlamejante.Id, DropChance = 0.25m, IsExclusive = true });
            if (foiceBalrog != null)
                dropTables.Add(new BossDropTable { EnemyId = balrog.Id, ItemId = foiceBalrog.Id, DropChance = 0.06m, IsExclusive = true });
        }

        // Kraken Drops
        var kraken = bosses.FirstOrDefault(b => b.Name == "Kraken");
        if (kraken != null)
        {
            var tentaculoKraken = items.FirstOrDefault(i => i.Name == "Tent√°culo do Kraken");
            
            if (tentaculoKraken != null)
                dropTables.Add(new BossDropTable { EnemyId = kraken.Id, ItemId = tentaculoKraken.Id, DropChance = 0.12m, IsExclusive = true });
        }

        _context.BossDropTables.AddRange(dropTables);
        await _context.SaveChangesAsync();
        _logger.LogInformation("üéÅ {Count} drops configurados para {BossCount} bosses", dropTables.Count, bosses.Count);
    }

    private async Task SeedDiceInventoriesAsync()
    {
        var heroes = await _context.Heroes.ToListAsync();
        var inventories = new List<DiceInventory>();

        // Her√≥is de n√≠vel mais alto come√ßam com mais dados
        foreach (var hero in heroes)
        {
            var inventory = new DiceInventory
            {
                HeroId = hero.Id,
                D6Count = 3 + (hero.Level / 5), // +1 D6 a cada 5 n√≠veis
                D8Count = hero.Level >= 10 ? 2 : 0,
                D12Count = hero.Level >= 15 ? 1 : 0,
                D20Count = hero.Level >= 18 ? 1 : 0
            };

            inventories.Add(inventory);
        }

        _context.DiceInventories.AddRange(inventories);
        await _context.SaveChangesAsync();
        _logger.LogInformation("üé≤ {Count} invent√°rios de dados criados para os her√≥is", inventories.Count);
    
        // ===== PARTY COMBOS =====
        _logger.LogInformation("Seeding Party Combos...");
        if (!_context.PartyCombos.Any())
        {
            var combos = new List<PartyCombo>
            {
                new PartyCombo
                {
                    Name = "Muralha Inabal√°vel",
                    RequiredClass1 = "Guerreiro",
                    RequiredClass2 = "Paladino",
                    Description = "A combina√ß√£o de for√ßa bruta e f√© divina cria uma defesa impenetr√°vel.",
                    Effect = "Reduz o roll necess√°rio contra bosses pesados e tanques.",
                    Icon = "üõ°Ô∏è"
                },
                new PartyCombo
                {
                    Name = "Trov√£o Arcano",
                    RequiredClass1 = "Mago",
                    RequiredClass2 = "Paladino",
                    Description = "Magia arcana amplificada por poder divino.",
                    Effect = "Super efetivo contra mortos-vivos e dem√¥nios.",
                    Icon = "‚ö°"
                },
                new PartyCombo
                {
                    Name = "Ca√ßadores Silenciosos",
                    RequiredClass1 = "Arqueiro",
                    RequiredClass2 = "Assassino",
                    Description = "Precis√£o letal combinada com furtividade mortal.",
                    Effect = "Extremamente efetivo contra drag√µes e bestas voadoras.",
                    Icon = "üéØ"
                },
                new PartyCombo
                {
                    Name = "Trindade Sagrada",
                    RequiredClass1 = "Guerreiro",
                    RequiredClass2 = "Mago",
                    RequiredClass3 = "Paladino",
                    Description = "A combina√ß√£o perfeita: for√ßa, magia e f√©.",
                    Effect = "B√¥nus contra todos os tipos de bosses.",
                    Icon = "‚ú®"
                },
                new PartyCombo
                {
                    Name = "Sombra e A√ßo",
                    RequiredClass1 = "Guerreiro",
                    RequiredClass2 = "Assassino",
                    Description = "For√ßa frontal distraindo enquanto o assassino ataca pelas costas.",
                    Effect = "Efetivo contra bosses humanoides e cavaleiros.",
                    Icon = "‚öîÔ∏è"
                },
                new PartyCombo
                {
                    Name = "Destrui√ß√£o Elemental",
                    RequiredClass1 = "Mago",
                    RequiredClass2 = "Arqueiro",
                    Description = "Flechas imbu√≠das com poder m√°gico devastador.",
                    Effect = "Extremamente efetivo contra golens e construtos.",
                    Icon = "üî•"
                }
            };

            await _context.PartyCombos.AddRangeAsync(combos);
            await _context.SaveChangesAsync();
            _logger.LogInformation("‚úÖ {Count} Party Combos seeded!", combos.Count);
        }

        // ===== BOSS WEAKNESSES =====
        _logger.LogInformation("Seeding Boss Weaknesses...");
        if (!_context.BossWeaknesses.Any())
        {
            var combos = await _context.PartyCombos.ToListAsync();
            var enemies = await _context.Enemies.Where(e => e.IsBoss).ToListAsync();

            var muralhaCombo = combos.FirstOrDefault(c => c.Name == "Muralha Inabal√°vel");
            var trovaoCombo = combos.FirstOrDefault(c => c.Name == "Trov√£o Arcano");
            var cacadoresCombo = combos.FirstOrDefault(c => c.Name == "Ca√ßadores Silenciosos");
            var trindadeCombo = combos.FirstOrDefault(c => c.Name == "Trindade Sagrada");
            var sombraCombo = combos.FirstOrDefault(c => c.Name == "Sombra e A√ßo");

            var weaknesses = new List<BossWeakness>();

            // Drag√£o Anci√£o
            var dragao = enemies.FirstOrDefault(e => e.Name == "Drag√£o Anci√£o");
            if (dragao != null && cacadoresCombo != null && trindadeCombo != null)
            {
                weaknesses.Add(new BossWeakness
                {
                    EnemyId = dragao.Id,
                    ComboId = cacadoresCombo.Id,
                    RollReduction = -3,
                    DropMultiplier = 1.25m,
                    ExpMultiplier = 1.15m,
                    FlavorText = "Arqueiros e Assassinos exploram os pontos fracos nas escamas do drag√£o!"
                });
                weaknesses.Add(new BossWeakness
                {
                    EnemyId = dragao.Id,
                    ComboId = trindadeCombo.Id,
                    RollReduction = -2,
                    DropMultiplier = 1.10m,
                    ExpMultiplier = 1.10m,
                    FlavorText = "A Trindade Sagrada une for√ßas contra o terror alado!"
                });
            }

            // Senhor Dem√¥nio
            var demonio = enemies.FirstOrDefault(e => e.Name == "Senhor Dem√¥nio");
            if (demonio != null && trovaoCombo != null && trindadeCombo != null)
            {
                weaknesses.Add(new BossWeakness
                {
                    EnemyId = demonio.Id,
                    ComboId = trovaoCombo.Id,
                    RollReduction = -4,
                    DropMultiplier = 1.30m,
                    ExpMultiplier = 1.20m,
                    FlavorText = "Magia arcana e poder divino devastam as for√ßas demon√≠acas!"
                });
                weaknesses.Add(new BossWeakness
                {
                    EnemyId = demonio.Id,
                    ComboId = trindadeCombo.Id,
                    RollReduction = -2,
                    DropMultiplier = 1.15m,
                    ExpMultiplier = 1.10m,
                    FlavorText = "A luz da Trindade repele as trevas infernais!"
                });
            }

            // Cavaleiro das Trevas
            var cavaleiro = enemies.FirstOrDefault(e => e.Name == "Cavaleiro das Trevas");
            if (cavaleiro != null && sombraCombo != null && muralhaCombo != null)
            {
                weaknesses.Add(new BossWeakness
                {
                    EnemyId = cavaleiro.Id,
                    ComboId = sombraCombo.Id,
                    RollReduction = -3,
                    DropMultiplier = 1.20m,
                    ExpMultiplier = 1.15m,
                    FlavorText = "For√ßa e furtividade quebram a guarda do cavaleiro sombrio!"
                });
                weaknesses.Add(new BossWeakness
                {
                    EnemyId = cavaleiro.Id,
                    ComboId = muralhaCombo.Id,
                    RollReduction = -2,
                    DropMultiplier = 1.10m,
                    ExpMultiplier = 1.05m,
                    FlavorText = "A Muralha Inabal√°vel resiste aos ataques das trevas!"
                });
            }

            if (weaknesses.Any())
            {
                await _context.BossWeaknesses.AddRangeAsync(weaknesses);
                await _context.SaveChangesAsync();
                _logger.LogInformation("‚úÖ {Count} Boss Weaknesses seeded!", weaknesses.Count);
            }
        }
    }

    private static string HashPassword(string password)
    {
        using var sha256 = SHA256.Create();
        var hashedBytes = sha256.ComputeHash(Encoding.UTF8.GetBytes(password));
        return Convert.ToBase64String(hashedBytes);
    }
}

